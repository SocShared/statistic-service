#spring:
  #datasource:
   # url: jdbc:h2:mem:testDb;DB_CLOSE_DELAY=-1
   # driver-class-name: org.h2.Driver
    #username: sa
server:
  port: 8884

spring:
  datasource:
    url:  jdbc:postgresql://${POSTGRES_HOST:localhost}/${POSTGRES_DB:springtest}
    username: ${POSTGRES_USER:springuser}
    password: ${POSTGRES_PASS:springpassword}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop

  rabbitmq:
    host: ${RABBIT_HOST:localhost} # RabbitMQ host.
    password: ${RABBIT_PASS:mqadmin} # Login to authenticate against the broker.
    port: ${RABBIT_PORT:5672} # RabbitMQ port.
    username: ${RABBIT_USER:mqadmin} # Login user to authenticate to the broker.

feign:
  url:
    auth: ${AUTH_SERVICE:localhost:19999}
    storage: ${STORAGE_SERVICE:localhost:8686}


service:

  tracking_num_days: 3
  data_page_size_for_step: 100


management:
  endpoints:
    web:
      exposure:
        include: auditevents, beans, caches, conditions, configprops, health, httptrace, info, loggers, metrics, mappings, shutdown

